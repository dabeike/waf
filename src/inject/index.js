// Generated by CoffeeScript 1.9.2
(function() {
  var check_inject, check_words, filter, http, inject, parse_get, parse_post, proxy;

  proxy = require('../http-proxy');

  parse_get = require("url");

  parse_post = require("querystring");

  http = require('http');

  inject = require("./usePythonCheck");

  check_words = function(data) {
    var dat, flag, li;
    flag = true;
    for (li in data) {
      dat = data[li];
      if (/xss/.test(dat)) {
        flag = false;
        break;
      }
      console.log(li, dat);
    }
    return flag;
  };

  check_inject = function(data, response, headers, url, post) {
    return function(res) {
      var body, flag;
      flag = false;
      console.log(res);
      if (res === 'true' && check_words(data)) {
        flag = true;
      } else {
        flag = false;
      }
      if (flag) {
        return proxy.httpRequest(response, headers, url, post);
      } else {
        body = '<html><head><meta charset="utf-8"></head><body>您的请求含有攻击信息，已被拦截</body></html>';
        response.writeHead(404, {
          'Content-Type': 'text/html;charset=utf-8'
        });
        response.write(body);
        return response.end();
      }
    };
  };

  filter = function(request, response, headers, url, post, type) {
    var data;
    if (post) {
      console.log("post:" + post);
      data = parse_post.parse(post);
      console.log(data);
    } else {
      console.log("get:" + url);
      data = parse_get.parse(url, true).query;
    }
    return inject.check({
      ip: request.connection.remoteAddress,
      data: data,
      url: url,
      type: type
    }, check_inject(data, response, headers, url, post));
  };

  exports.filter = filter;

}).call(this);

//# sourceMappingURL=index.js.map
